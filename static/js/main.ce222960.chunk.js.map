{"version":3,"sources":["components/AppStyled.js","components/FeedbackOptions/FeedbackOptionsStyled.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/NotificationStyled.js","components/Notification/Notification.js","components/Section/SectionStyled.js","components/Section/Section.js","components/Statistics/StatisticsStyled.js","components/Statistics/Statistics.js","components/App.js","index.js"],"names":["Container","styled","div","Button","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","P","p","Notification","message","Sect","section","Section","title","children","className","StatsList","ul","Statistic","good","neutral","bad","total","positivePercentage","App","state","addFeedback","setState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","keys","Statistics","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kcAEA,IAQeA,EARGC,IAAOC,IAAV,K,gnBCAf,IA+BeC,EA/BAF,IAAOG,OAAV,KCeGC,EAbS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAAQC,KAAK,SAAsBC,QAAS,kBAAMJ,EAAgBE,IAAlE,SACGA,GADwBA,O,sICJ/B,IAMeG,EANLX,IAAOY,EAAV,KCUQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAAC,EAAD,UAAIA,K,gPCHb,IAaeC,EAbFf,IAAOgB,QAAV,KCgBKC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAAC,EAAD,WACE,oBAAIC,UAAU,QAAd,SAAuBF,IACtBC,M,iaCNP,IAyBeE,EAzBGrB,IAAOsB,GAAV,KCgCAC,EA9BG,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC9C,OACE,eAAC,EAAD,WACE,qBAAIR,UAAU,kBAAd,mBACQ,sBAAMA,UAAU,QAAhB,SAAyBI,OAEjC,qBAAIJ,UAAU,kBAAd,sBACW,sBAAMA,UAAU,QAAhB,SAAyBK,OAEpC,qBAAIL,UAAU,kBAAd,kBACO,sBAAMA,UAAU,QAAhB,SAAyBM,OAEhC,qBAAIN,UAAU,kBAAd,oBACS,sBAAMA,UAAU,QAAhB,SAAyBO,OAElC,qBAAIP,UAAU,kBAAd,gCACqB,uBAAMA,UAAU,QAAhB,UAAyBQ,EAAzB,cCqCZC,E,4MAjDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,YAAc,SAACvB,GACb,EAAKwB,UAAS,SAACF,GAAD,sBACXtB,EAASsB,EAAMtB,GAAU,O,EAI9ByB,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAK7B,GAAN,OAAiB6B,EAAM7B,IAAQ,I,EAGzE8B,gCAAkC,WAAO,IAC/Bd,EAAS,EAAKM,MAAdN,KACR,OAAOe,KAAKC,MAAOhB,EAAO,EAAKS,qBAAwB,MAAQ,G,uDAGvD,IAAD,EACwBQ,KAAKX,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CACEb,QAAS6B,OAAOQ,KAAKD,KAAKX,OAC1BxB,gBAAiBmC,KAAKV,gBAG1B,cAAC,EAAD,CAASb,MAAM,aAAf,SACGuB,KAAKR,qBACJ,cAACU,EAAD,CACEnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,KAAKR,qBACZL,mBAAoBa,KAAKH,oCAG3B,cAAC,EAAD,CAAcxB,QAAQ,+B,GA1ChB8B,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ce222960.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 1280px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport default Container;\n","import styled from \"styled-components\";\n\nconst Button = styled.button`\n  display: inline-block;\n  outline: none;\n  border-radius: 5px;\n  border-bottom: solid 1px #d6d6d6;\n  min-width: 80px;\n  height: 40px;\n  padding: 10px;\n  background-color: honeydew;\n  color: black;\n  font-weight: 700;\n  font-size: 16px;\n\n  &:not(:last-child) {\n    margin-right: 15px;\n  }\n  &:hover {\n    cursor: pointer;\n  }\n  &:active {\n    transform: translateY(4px);\n    border-bottom: none;\n  }\n  &:nth-child(2):active {\n    background-color: springgreen;\n  }\n  &:nth-child(4):active {\n    background-color: salmon;\n  }\n`;\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./FeedbackOptionsStyled\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map((option) => (\n    <Button type=\"button\" key={option} onClick={() => onLeaveFeedback(option)}>\n      {option}\n    </Button>\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import styled from \"styled-components\";\n\nconst P = styled.p`\n  color: honeydew;\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport default P;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport P from \"./NotificationStyled\";\n\nconst Notification = ({ message }) => {\n  return <P>{message}</P>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from \"styled-components\";\n\nconst Sect = styled.section`\n  &:not(:last-child) {\n    margin-bottom: 50px;\n  }\n\n  .title {\n    margin-bottom: 15px;\n    color: honeydew;\n    font-size: 26px;\n    text-align: center;\n  }\n`;\n\nexport default Sect;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Sect from \"./SectionStyled\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <Sect>\n      <h2 className=\"title\">{title}</h2>\n      {children}\n    </Sect>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import styled from \"styled-components\";\n\nconst StatsList = styled.ul`\n  display: flex;\n\n  .statsList__item {\n    color: honeydew;\n    font-weight: 700;\n    font-size: 18px;\n\n    &:nth-child(1) {\n      color: springgreen;\n    }\n    :nth-child(3) {\n      color: salmon;\n    }\n    &:not(:last-child) {\n      margin-right: 15px;\n    }\n  }\n\n  .light {\n    font-style: italic;\n    color: orange;\n  }\n`;\n\nexport default StatsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StatsList from \"./StatisticsStyled\";\n\nconst Statistic = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <StatsList>\n      <li className=\"statsList__item\">\n        Good: <span className=\"light\">{good}</span>\n      </li>\n      <li className=\"statsList__item\">\n        Neutral: <span className=\"light\">{neutral}</span>\n      </li>\n      <li className=\"statsList__item\">\n        Bad: <span className=\"light\">{bad}</span>\n      </li>\n      <li className=\"statsList__item\">\n        Total: <span className=\"light\">{total}</span>\n      </li>\n      <li className=\"statsList__item\">\n        Positive feedback: <span className=\"light\">{positivePercentage}%</span>\n      </li>\n    </StatsList>\n  );\n};\n\nStatistic.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistic;\n","import React, { Component } from \"react\";\nimport Container from \"./AppStyled\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./Notification/Notification\";\nimport Section from \"./Section/Section\";\nimport Statistics from \"./Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = (option) => {\n    this.setState((state) => ({\n      [option]: state[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, option) => acc + option, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round((good / this.countTotalFeedback()) * 100) || 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.addFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./base.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}